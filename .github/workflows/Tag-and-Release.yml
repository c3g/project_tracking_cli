name: Tag and Release Workflow

on:
  pull_request:
  types:
    - closed

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
        os: [ubuntu-latest, macos-latest]

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    if: startsWith(github.event.pull_request.title, 'Release:')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Setup PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get tag
        id: get_tag
        run: |
          git branch --show-current
          git pull
          pdm install --prod --no-lock --no-editable
          echo "version=$(pdm show --version)" >> $GITHUB_OUTPUT
      - name: Tag the commit
        run: |
          next_version=${{ steps.get_tag.outputs.version }}
          git tag -a "$next_version" -m "Version $next_version"
          git push --follow-tags
      - name: Create changelog diff
        id: changelog_diff
        run: |
          sed -n '/#### \[2.0.1\]/,/^#### /p' CHANGELOG.md | sed '$d' > release_notes.md
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.version }}
          release_name: Release ${{ steps.get_tag.outputs.version }}
          body_path: ./release_notes.md
          draft: false
          prerelease: false
      - name: Delete release_notes file
        run: rm release_notes.md
